spring.application.name=GamesStore
server.address=0.0.0.0
server.port=8080
spring.profiles.active=local
spring.web.cors.allowed-origin-patterns=http://127.0.0.1:5501,http://localhost:8080, http://localhost:63342

file.upload.dir=D:/our-gameMarketPlaces/our-gameMarketPlaces/uploads/images
spring.web.resources.static-locations=file:/D:/our-gameMarketPlaces/our-gameMarketPlaces/uploads/images/




# Database Configuration
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.url=${DATABASE_URL}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Security Configuration
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.web.servlet=DEBUG

# Enable multipart support
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB


# CORS Configuration
spring.web.mvc.cors.allow-credentials=true
spring.web.mvc.cors.allowed-origins=http://127.0.0.1:5501, http://localhost:5501, http://localhost:8080, \
  "http://127.0.0.1:8000", http://localhost:8000, http://localhost:63342
spring.web.mvc.cors.allowed-methods=GET, POST, PUT, DELETE, OPTIONS
spring.web.mvc.cors.allowed-headers=Content-Type, X-Api-Key

# SMTP Configuration
spring.mail.host=${SMTP_HOST}
spring.mail.port=587
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Google Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# FTP Server Configuration
ftp.server=${FTP_SERVER}
ftp.port=${FTP_PORT}
ftp.username=${FTP_USERNAME}
ftp.password=${FTP_PASSWORD}

