### Send OTP request
POST http://localhost:8080/api/auth/send-otp?email=anaphygon@protonmail.com
X-Api-Key: secret


### Register Request (with OTP)
POST https://virtual-realm-b8a13cc57b6c.herokuapp.com/api/auth/register
Content-Type: application/json
X-Api-Key: secret

{
  "username": "Anaphygon",
  "email": "Anaphygon@protonmail.com",
  "password": "TestPassword123",
  "password_confirmation": "TestPassword123",
  "isGoogle": false,
  "googleToken": null,
  "isOtpVerified": false
}

### verif otp
POST http://localhost:8080/api/auth/verify-otp-regis
X-Api-Key: secret
Content-Type: application/json

{
  "email": "example@gmail.com",

  "otp": "587123"
}


### Login
POST https://virtual-realm-b8a13cc57b6c.herokuapp.com/api/auth/login
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "email": "Anaphygon@protonmail.com",
  "password": "NewSecurePassword123",
  "isGoogle": false
}

### Test the /user endpoint
GET http://localhost:8080/api/auth/user
X-Api-Key: secret
Authorization: eyJzdWIiOiI2MjFmZGY2NS0yZTVmLTQ4MWItYjQxNi04NjU2OWY0MjljNWUiLCJ1c2VybmFtZSI6Ikxpc3ZpbmRhbnUifQ==




### Logout
POST http://localhost:8080/api/auth/logout
X-Api-Key: secret
Content-Type: application/json
Accept: application/json
Authorization: Bearer eyJzdWIiOiI1NzE0MzZlYi0wNjU4LTRiMWMtYmMzOS1mNjQ4MWZlOTEzMTgiLCJ1c2VybmFtZSI6Ikxpc3ZpbmRhbnUifQ==


### Request Reset Password
POST https://virtual-realm-b8a13cc57b6c.herokuapp.com/api/auth/request-reset
Content-Type: application/json
X-Api-Key: secret

{
  "email": "Anaphygon@protonmail.com"
}

### Reset Password

POST https://virtual-realm-b8a13cc57b6c.herokuapp.com/api/auth/reset-password
Content-Type: application/json
X-Api-Key: secret

{
  "token": "681150",
  "newPassword": "NewSecurePassword123"
}

### userDetailChange
PUT http://localhost:8080/api/users/update/36
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "username": "ANAPIGONKU",
  "password": "PasswordBaru"
}






### get token to frontend
GET http://localhost:8080/api/auth/user
Authorization: eyJzdWIiOiI3YzExNDZiYS1iMTJjLTQzZTMtOWRkOC0zNmU1MGNlYTc0NGMiLCJ1c2VybmFtZSI6InNhdyJ9
X-Api-Key: secret


###create product
POST http://localhost:8080/api/products
X-Api-Key: secret
Content-Type: application/json
Accept: application/json
token: eyJzdWIiOiJjYzZiNmU3ZS0zNTY5LTRmNzItYmMwMS1hYTE4MjdjYjdmZjYiLCJ1c2VybmFtZSI6IkFuYXBoeWdvbiJ9

{
  "id": 5,
  "name": "a OG",
  "price": 1200000,
  "quantity": 10,
  "categoryId": 3,
  "genreId": 2
}

### Create product with image
POST http://localhost:8080/api/products
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Accept: application/json
X-Api-Key: secret
token: eyJzdWIiOiJjYzZiNmU3ZS0zNTY5LTRmNzItYmMwMS1hYTE4MjdjYjdmZjYiLCJ1c2VybmFtZSI6IkFuYXBoeWdvbiJ9

----WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="body"

{
  "id": 1,
  "name": "Naruto Shippuden",
  "price": 1200000,
  "quantity": 10,
  "categoryId": 3,
  "genreId": 2
}

----WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename= "resources/img/Ippo Pfp.jpeg"
Content-Type: image/jpeg

<@file>  <!-- The image file should be included here -->

----WebKitFormBoundary7MA4YWxkTrZu0gW--




###create product invalid

POST http://localhost:8080/api/products
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "id" : "",
  "name": "",
  "price": 0,
  "quantity": -10
}
### get product
GET http://localhost:8080/api/products/15
X-Api-Key: secret
Accept: application/json

### get product not found
GET localhost:8080/api/products/Salah
X-Api-Key: secret
Accept: application/json

### Update Product
PUT localhost:8080/api/products/1
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "name": "Lenovo Legion 6 pro",
  "price": 100000,
  "quantity": 10

}
### Update Product not Found
PUT localhost:8080/api/products/Salah
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "name": "Lenovo Legion 6 pro",
  "price": 100000,
  "quantity": 10

}
### Update Product with invalid body
PUT localhost:8080/api/products/A001
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "name": "",
  "price": 0,
  "quantity": -10

}

### Delete product

DELETE localhost:8080/api/products/10
X-Api-Key: secret
Accept: application/json

### Delete product not found
DELETE localhost:8080/api/products/A001
X-Api-Key: secret
Accept: application/json

### list products
GET http://localhost:8080/api/products
X-Api-Key: secret
### list products with size
GET http://localhost:8080/api/products?size=5
X-Api-Key: secret
### list products with size and page
GET http://localhost:8080/api/products?size=5&page=1
X-Api-Key: secret

### Create Purchase
POST http://localhost:8080/api/purchases
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "userId": 1,
  "productId": 1,
  "quantity": 2
}
### Get Purchase
GET http://localhost:8080/api/purchases?userId=1
X-Api-Key: secret
Accept: application/json


### Initiate payment test
POST http://localhost:8080/api/payments/initiate
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "purchaseId": 1,
  "amount": 200000
}

### Confirm Payment
PUT http://localhost:8080/api/payments/confirm/6
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "status": "confirmed"
}

### Cancel Payment
PUT http://localhost:8080/api/payments/cancel/1
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "reason": "Customer request"
}

### get payment details
GET http://localhost:8080/api/payments/2
X-Api-Key: secret
Accept: application/json


### Get User Inventory
GET http://localhost:8080/api/inventory?userId=1
Accept: application/json
X-Api-Key: secret

###
POST http://localhost:8080/api/auth/register
Content-Type: application/json
X-Api-Key: secret

{
  "username": "tewdstesUser",
  "email": "tewdstes@example.com",
  "password": "tewsdtesPassword",
  "isAuth0": true
}

###
GET http://localhost:8080/api/auth/login/oauth2/code/auth0?code=authCodeFromAuth0
X-Api-Key: secret
Content-Type: application/json


### Login via Google OAuth2
GET http://localhost:8080/api/auth/login/oauth2/code/google
X-Api-Key: secret
Accept: application/json



### Register User via API
POST http://localhost:8080/api/auth/register
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "username": "danu",
  "email": "danu@Gmail.com",
  "password": "danu",
  "isAuth0": false
}

### Create Product via API
POST http://localhost:8080/api/products
X-Api-Key: secret
Content-Type: application/json
Accept: application/json

{
  "id": 1,
  "name": "Ps Vita",
  "price": 1200000,
  "quantity": 10
}


### Step 1: Initiate OAuth2 Authorization

GET https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=751951873142-6lrn0jmmpm0r5cf63p294kmaqpvo1rsq.apps.googleusercontent.com&redirect_uri=http://localhost:8080/login/oauth2/code/google&scope=profile%20email&state=RANDOM_STATE_STRING


### Exchange Authorization Code for Access Token
POST https://oauth2.googleapis.com/token
Content-Type: application/x-www-form-urlencoded

grant_type=authorization_code
code=4%2F0AeanS0boLOowhl3Ywc0eJQu6dr443_tQK58VkgQLIZly6NG4NhjavWPQtIb9b5dGia54fw
client_id=751951873142-6lrn0jmmpm0r5cf63p294kmaqpvo1rsq.apps.googleusercontent.com
client_secret=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
redirect_uri=http://localhost:8080/login/oauth2/code/google


### Step 3: Use the Access Token to Retrieve User Info
# Replace {access_token} with the token received from the previous request
GET https://www.googleapis.com/oauth2/v3/userinfo
Authorization: Bearer {access_token}


### test kategori
POST http://localhost:8080/api/categories
Content-Type: application/json
X-Api-Key: secret

"Console"

###
GET http://localhost:8080/api/categories/3
X-Api-Key: secret
###
GET http://localhost:8080/api/genres/2
X-Api-Key: secret

###
PUT http://localhost:8080/api/categories/3
Content-Type: application/json
X-Api-Key: secret

"Games"

###
DELETE http://localhost:8080/api/categories/2
X-Api-Key: secret


###
POST http://localhost:8080/api/genres?name=Fighting&categoryId=3
X-Api-Key: secret


###
PUT http://localhost:8080/api/genres/1?name=Adventure%20RPG&categoryId=1
X-Api-Key: secret

###
DELETE http://localhost:8080/api/genres/1
X-Api-Key: secret


### Request to fetch products
GET http://localhost:8080/api/products?page=0&size=10
Accept: application/json
X-Api-Key: secret





### Update Product Request

# This is a PUT request to update the product
PUT http://localhost:8080/api/products/10 HTTP/1.1
X-Api-Key: secret

Content-Type: multipart/form-data; boundary=------------------------boundary

--------------------------boundary
Content-Disposition: form-data; name="body"
Content-Type: application/json

{
    "name": "Updated Product Name",
    "price": 99,
    "quantity": 10,
    "categoryId": 3,
    "genreId": 2,
    "imageUrl": "default-image.jpg"
}

--------------------------boundary
Content-Disposition: form-data; name="file"; filename="image.jpg"
Content-Type: image/jpeg

[Insert image content here]
--------------------------boundary--
